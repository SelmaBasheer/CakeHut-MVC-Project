@using CakeHut.Models.ViewModels
@model DashboardVM

<section class="content-main">
    <div class="content-header text-center">
        <h1 class="content-title card-title">DASHBOARD</h1>
        <p>Comprehensive Data About Your Business</p>
        <div class="mb-2">
            <a asp-action="Invoice" asp-controller="DashBoard" class="btn btn-primary"><i class="text-muted material-icons md-post_add"></i>Generate Report</a>
        </div>
    </div>

    <!-- Overview Cards -->
    <div class="row mt-4">
        <!-- Revenue Card -->
        <div class="col-lg-3 col-md-6">
            <div class="card card-body mb-4 shadow-sm" style="background: linear-gradient(135deg, #42a5f5, #478ed1); color: #fff; border-radius: 10px;">
                <article class="icontext d-flex align-items-center">
                    <div class="text">
                        <h6 class="card-title">Revenue</h6>
                        <span style="font-size: 1.5em;">@Model.TotalSales.ToString("₹#,##0.00")</span>
                        <p class="text-sm text-light">Total earnings to date</p>
                    </div>
                </article>
            </div>
        </div>

        <!-- Orders Card -->
        <div class="col-lg-3 col-md-6">
            <div class="card card-body mb-4 shadow-sm" style="background: linear-gradient(135deg, #66bb6a, #43a047); color: #fff; border-radius: 10px;">
                <article class="icontext">
                    <div class="text">
                        <h6 class="card-title">Orders</h6>
                        <span style="font-size: 1.5em;">@Model.OrderCount</span>
                        <p class="text-sm text-light">Total number of orders</p>
                    </div>
                </article>
            </div>
        </div>

        <!-- Products Card -->
        <div class="col-lg-3 col-md-6">
            <div class="card card-body mb-4 shadow-sm" style="background: linear-gradient(135deg, #ffca28, #fdd835); color: #fff; border-radius: 10px;">
                <article class="icontext">
                    <div class="text">
                        <h6 class="card-title">Products</h6>
                        <span style="font-size: 1.5em;">@Model.ProductCount</span>
                        <p class="text-sm text-light">Active products</p>
                    </div>
                </article>
            </div>
        </div>

        <!-- Categories Card -->
        <div class="col-lg-3 col-md-6">
            <div class="card card-body mb-4 shadow-sm" style="background: linear-gradient(135deg, #ec407a, #d81b60); color: #fff; border-radius: 10px;">
                <article class="icontext">
                    <div class="text">
                        <h6 class="card-title">Categories</h6>
                        <span style="font-size: 1.5em;">@Model.CategoryCount</span>
                        <p class="text-sm text-light">Available categories</p>
                    </div>
                </article>
            </div>
        </div>
    </div>

    <!-- Sale Statistics Chart with Top Selling -->
    <div class="row">
        <!-- Sale Statistics Chart -->
        <div class="col-lg-8">
            <div class="card mb-4 shadow-sm" style="border-radius: 10px;">
                <header class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">Sale Statistics</h4>
                </header>
                <article class="card-body">
                    <canvas id="salesChart" height="100"></canvas>
                </article>
            </div>
        </div>

        <!-- Top Selling Products and Categories -->
        <div class="col-lg-4">
            <!-- Top Selling Products -->
            <div class="card card-body mb-4 shadow-sm" style="background: linear-gradient(135deg, #8e44ad, #9b59b6); color: #fff; border-radius: 10px;">
                <h5 class="card-title">Top Selling Products</h5>
                <ul class="list-unstyled">
                    @if (Model.TopSellingProducts != null && Model.TopSellingProducts.Any())
                    {
                        foreach (var product in Model.TopSellingProducts)
                        {
                            <li class="mb-1">
                                @product.Name - @Model.ProductQuantitiesSold[product.Id] sold
                            </li>
                        }
                    }
                    else
                    {
                        <li>No sales data available for products.</li>
                    }
                </ul>
            </div>

            <!-- Top Selling Categories -->
            <div class="card card-body shadow-sm" style="background: linear-gradient(135deg, #e57373, #f44336); color: #fff; border-radius: 10px;">
                <h5 class="card-title">Top Selling Categories</h5>
                <ul class="list-unstyled">
                    @if (Model.TopSellingCategories.Any())
                    {
                        var topCategory = Model.TopSellingCategories.First();
                        if (Model.CategorySales.TryGetValue(topCategory.Id, out var soldQuantity))
                        {
                            <li>@topCategory.Name - @soldQuantity items sold</li>
                        }
                        else
                        {
                            <li>@topCategory.Name - No sales data available.</li>
                        }
                    }
                    else
                    {
                        <li>No sales data for categories.</li>
                    }
                </ul>
            </div>
        </div>
    </div>




    <!-- Latest Orders -->
    <div class="card mb-4 shadow-sm">
        <header class="card-header d-flex justify-content-between align-items-center bg-primary text-white">
            <h4 class="card-title mb-0">Latest Orders</h4>
            <a asp-action="Index" asp-controller="AdminOrders" class="btn btn-light btn-sm text-primary">
                Manage Orders
            </a>
        </header>
        <div class="card-body">
            <table class="table table-striped table-hover table-bordered align-middle">
                <thead class="bg-dark text-white">
                    <tr>
                        <th>Order ID</th>
                        <th>Client</th>
                        <th>Units</th>
                        <th>Total</th>
                        <th>Payment Method</th>
                        <th>Payment Status</th>
                        <th>Order Status</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Order order in ViewBag.Orders)
                    {
                        int count = order.Items.Sum(item => item.Quantity);
                        decimal total = order.ShippingFee + order.Items.Sum(item => item.Quantity * item.UnitPrice);
                        <tr>
                            <td class="fw-bold">@order.Id</td>
                            <td>@order.Client.FirstName</td>
                            <td class="text-center">@count</td>
                            <td class="text-success fw-bold">@total.ToString("₹#,##0.00")</td>
                            <td>@order.PaymentMethod</td>
                            <td>
                                <span class="badge
                                    @(order.PaymentStatus == "accepted" ? "bg-success" :
                                      order.PaymentStatus == "pending" ? "bg-warning text-dark" : "bg-secondary text-light")">
                                    @order.PaymentStatus
                                </span>
                            </td>
                            <td>
                                <span class="badge
                                    @(order.OrderStatus == "created" ? "bg-info text-dark" :
                                      order.OrderStatus == "accepted" ? "bg-primary" :
                                      order.OrderStatus == "canceled" ? "bg-danger" :
                                      order.OrderStatus == "delivered" ? "bg-success" :
                                      order.OrderStatus == "returned" ? "bg-secondary text-light" : "bg-dark text-light")">
                                    @order.OrderStatus
                                </span>
                            </td>
                            <td>@order.CreatedAt.ToShortDateString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="d-flex justify-content-end">
        <a asp-action="DownloadSalesReportExcel" class="btn btn-primary me-2">Download Excel</a>
        <a asp-action="DownloadSalesReportPDF" class="btn btn-danger">Download PDF</a>
    </div>
</section>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const chartLabels = @Html.Raw(Json.Serialize(Model.ChartLabels));
        const chartData = @Html.Raw(Json.Serialize(Model.ChartData));

        const ctx = document.getElementById('salesChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: chartLabels,
                datasets: [{
                    label: 'Revenue',
                    data: chartData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    fill: true,
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Time Period'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Revenue (₹)'
                        }
                    }
                }
            }
        });
    </script>
}
