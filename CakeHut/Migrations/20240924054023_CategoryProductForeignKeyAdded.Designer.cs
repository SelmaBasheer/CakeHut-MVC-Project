// <auto-generated />
using CakeHut.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CakeHut.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240924054023_CategoryProductForeignKeyAdded")]
    partial class CategoryProductForeignKeyAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CakeHut.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Cakes"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "CupCakes"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "TrendingCakes"
                        });
                });

            modelBuilder.Entity("CakeHut.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = "In Stock",
                            CategoryId = 1,
                            Description = "Moist chocolate cake with rich fudge frosting",
                            ImageUrl = "chocolate-fudge-cake.jpg",
                            Name = "Chocolate Fudge Cake",
                            Price = 1000m,
                            Weight = 1m
                        },
                        new
                        {
                            Id = 2,
                            Availability = "In Stock",
                            CategoryId = 1,
                            Description = "Delicate butterscotch cake with creamy praline frosting",
                            ImageUrl = "vanilla-bean-cake.jpg",
                            Name = "Butterscotch Cake",
                            Price = 1000m,
                            Weight = 1m
                        },
                        new
                        {
                            Id = 3,
                            Availability = "In Stock",
                            CategoryId = 1,
                            Description = "Moist red velvet cake with cream cheese frosting",
                            ImageUrl = "red-velvet-cake.jpg",
                            Name = "Red Velvet Cake",
                            Price = 1000m,
                            Weight = 1m
                        });
                });

            modelBuilder.Entity("CakeHut.Models.Product", b =>
                {
                    b.HasOne("CakeHut.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
